# NOTE: docker build -t frontend_app -f client/Dockerfile .

# STAGE 1: Build app
FROM node:18-alpine as react-build

# Copy necessary files for the GraphQL schema (if required)
ADD ["server/src/graphql/schema.gql", "./server/src/graphql/"]
RUN ls -la
RUN ls -la ./server/src/graphql/

# Create a directory for your application
RUN mkdir /react_app
WORKDIR /react_app

# Copy the frontend client code into the container
COPY client ./
RUN ls -la

# Install dependencies and build the application
RUN yarn install
RUN yarn generate
RUN yarn build

# STAGE 2: Serve the built app using NGINX
FROM nginx:alpine

# Copy the custom Nginx configuration template
COPY client/.nginx/nginx.conf /etc/nginx/conf.d/configfile.template

# Update this line to copy the correct build output directory
COPY --from=react-build /react_app/dist /usr/share/nginx/html

# Set environment variables and expose port
ENV PORT 8080
ENV HOST 0.0.0.0
EXPOSE 8080

# Substitute environment variables and start Nginx
CMD sh -c "envsubst '\$PORT' < /etc/nginx/conf.d/configfile.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
