# https://cloud.google.com/sql/docs/mysql/connect-build
steps:
  # ----------------- Decrypting JSON ENV file -----------------
  - id: 'decrypt-client-env-var'
    name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud secrets versions access latest --secret=$_ENV_SECRET_NAME > /workspace/client_env.json

  # ----------------- Build App Docker Image -----------------
  # Need to build app at root directory due to schema.gql being in ./server
  # This step creates the .env file for the production react app build
  - id: 'create-client-env-file'
    name: 'gcr.io/cloud-builders/docker'
    dir: './client'
    entrypoint: '/bin/bash'
    args:
      - '-c'
      - |
        apt-get update && apt-get install -y jq
        echo VITE_REACT_APP_GRAPHQL_URL=\"$(jq -r '."_REACT_APP_GRAPHQL_URL"' /workspace/client_env.json)\">> .env
        echo VITE_REACT_APP_CLERK_PUBLISHABLE_KEY=\"$(jq -r '."_REACT_APP_CLERK_PUBLISHABLE_KEY"' /workspace/client_env.json)\">> .env
        echo VITE_REACT_APP_STRIPE_PUB_KEY=\"$(jq -r '."_REACT_APP_STRIPE_PUB_KEY"' /workspace/client_env.json)\">> .env
        echo VITE_REACT_APP_GOOGLE_MAPS_API_KEY=\"$(jq -r '."_REACT_APP_GOOGLE_MAPS_API_KEY"' /workspace/client_env.json)\">> .env
        cat .env

  - id: 'build-client-docker-image'
    name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/client-image:$COMMIT_SHA', '-f', './client/Dockerfile', '.']

  - id: 'push-client-docker-image'
    name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/client-image:$COMMIT_SHA']

  # ----------------- Deploying App Docker Image to Cloud Run Service -----------------
  - id: 'deploy-client-docker-image'
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - '$_CLOUD_RUN_SERVICE_NAME'
      - '--image'
      - 'gcr.io/$PROJECT_ID/client-image:$COMMIT_SHA'
      - '--region'
      - 'us-central1'

images: ['gcr.io/$PROJECT_ID/client-image:$COMMIT_SHA']

substitutions:
  _ENV_SECRET_NAME: client-env-var
  _CLOUD_RUN_SERVICE_NAME: client

options:
  logging: CLOUD_LOGGING_ONLY
