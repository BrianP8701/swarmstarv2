steps:
  # ----------------- Decrypting JSON ENV file -----------------
  - id: 'decrypt-swarmstar-secrets'
    name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud secrets versions access latest --secret=$_ENV_SECRET_NAME > ./server/.env

  # ----------------- Build WebSocket Server Docker Image -----------------
  - id: 'build-websocket-server-docker-image'
    name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/websocket-server:$COMMIT_SHA', '--build-arg', 'ENV_FILE=.env', '-f', './server/Dockerfile.websocket', './server']

  - id: 'push-websocket-server-docker-image'
    name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/websocket-server:$COMMIT_SHA']

  # ----------------- Deploying WebSocket Server Docker Image to Cloud Run Service -----------------
  - id: 'deploy-websocket-server-docker-image'
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - '$_SERVICE_NAME'
      - '--image'
      - 'gcr.io/$PROJECT_ID/websocket-server:$COMMIT_SHA'
      - '--region'
      - 'us-central1'
      - '--set-env-vars'
      - 'NODE_ENV=$_NODE_ENV'
      - '--allow-unauthenticated'

images: ['gcr.io/$PROJECT_ID/websocket-server:$COMMIT_SHA']

substitutions:
  _ENV_SECRET_NAME: swarmstar-secrets
  _SERVICE_NAME: websocket-server
  _NODE_ENV: production

options:
  logging: CLOUD_LOGGING_ONLY
