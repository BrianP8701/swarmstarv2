# https://cloud.google.com/sql/docs/mysql/connect-build
steps:
  # ----------------- Decrypting JSON ENV file -----------------
  - id: 'decrypt-swarmstar-secrets'
    name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud secrets versions access latest --secret=$_ENV_SECRET_NAME > ./server/.env

  - id: 'build-server-docker-image'
    name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/server-image:$COMMIT_SHA', '--build-arg', 'ENV_FILE=.env', './server']

  - id: 'push-server-docker-image'
    name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/server-image:$COMMIT_SHA']

  # ----------------- Build Sql Proxy Layer-----------------
  # Generate dockerfile that copies "Cloud SQL Auth proxy binary" and build
  - id: 'build-sql-auth-proxy-image'
    name: 'gcr.io/cloud-builders/docker'
    entrypoint: '/bin/bash'
    args:
      - '-c'
      - |
        echo "FROM gcr.io/$PROJECT_ID/server-image:$COMMIT_SHA
        COPY --from=gcr.io/cloudsql-docker/gce-proxy /cloud_sql_proxy /cloudsql/cloud_sql_proxy" > Dockerfile-proxy;
        docker build -f Dockerfile-proxy -t ${_IMAGE_NAME}-proxy .

  # Starts the Cloud SQL Auth proxy and run migration
  - id: 'migrate-socket-and-migrate-db'
    name: '${_IMAGE_NAME}-proxy'
    dir: './server'
    entrypoint: '/bin/bash'
    args:
      - '-c'
      - |
        set -a
        source .env
        set +a
        /cloudsql/cloud_sql_proxy -instances=$_SQL_INSTANCE_CONNECTION_NAME -dir=/cloudsql & sleep 2;
        npx prisma migrate deploy

  # ----------------- Deploying Server Docker Image to Cloud Run Service -----------------
  - id: 'deploy-server-docker-image'
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - '$_SERVICE_NAME'
      - '--image'
      - 'gcr.io/$PROJECT_ID/server-image:$COMMIT_SHA'
      - '--region'
      - 'us-central1'
      - '--set-env-vars'
      - 'NODE_ENV=$_NODE_ENV'

images: ['gcr.io/$PROJECT_ID/server-image:$COMMIT_SHA']

substitutions:
  _SQL_INSTANCE_CONNECTION_NAME: swarmstar:us-central1:swarmstarv2
  _IMAGE_NAME: gcr.io/${PROJECT_ID}/server-image
  _ENV_SECRET_NAME: swarmstar-secrets
  _SERVICE_NAME: server
  _NODE_ENV: production

options:
  logging: CLOUD_LOGGING_ONLY
